<?php
/**
 * Database Configuration
 * Handles database connection and configuration settings
 * Uses environment variables for AWS deployment
 */

// Load environment variables from .env file
function loadEnv($path) {
    if (!file_exists($path)) {
        return;
    }
    
    $lines = file($path, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
    foreach ($lines as $line) {
        if (strpos(trim($line), '#') === 0) {
            continue;
        }
        
        list($name, $value) = explode('=', $line, 2);
        $name = trim($name);
        $value = trim($value);
        
        if (!array_key_exists($name, $_SERVER) && !array_key_exists($name, $_ENV)) {
            putenv(sprintf('%s=%s', $name, $value));
            $_ENV[$name] = $value;
            $_SERVER[$name] = $value;
        }
    }
}

// Load .env file
loadEnv(__DIR__ . '/../.env');

class Database {
    // Database configuration from environment variables
    private $host;
    private $db_name;
    private $username;
    private $password;
    private $port;
    
    public $conn;
    
    public function __construct() {
        $this->host = $_ENV['DB_HOST'] ?? getenv('DB_HOST') ?? 'localhost';
        $this->db_name = $_ENV['DB_NAME'] ?? getenv('DB_NAME') ?? 'task-manager';
        $this->username = $_ENV['DB_USERNAME'] ?? getenv('DB_USERNAME') ?? 'root';
        $this->password = $_ENV['DB_PASSWORD'] ?? getenv('DB_PASSWORD') ?? '';
        $this->port = $_ENV['DB_PORT'] ?? getenv('DB_PORT') ?? 3306;
    }
    
    /**
     * Establish database connection
     */
    public function getConnection() {
        $this->conn = null;
        
        try {
            $this->conn = new mysqli(
                $this->host,
                $this->username,
                $this->password,
                $this->db_name,
                $this->port
            );
            
            // Set charset to utf8mb4 for better Unicode support
            $this->conn->set_charset("utf8mb4");
            
            if ($this->conn->connect_error) {
                throw new Exception("Connection failed: " . $this->conn->connect_error);
            }
            
        } catch(Exception $e) {
            error_log("Database connection error: " . $e->getMessage());
            
            // Log to application log file if configured
            $log_path = $_ENV['LOG_PATH'] ?? '/var/log/task-manager/app.log';
            if (is_writable(dirname($log_path))) {
                file_put_contents($log_path, 
                    date('Y-m-d H:i:s') . " - Database connection error: " . $e->getMessage() . "\n", 
                    FILE_APPEND | LOCK_EX
                );
            }
            
            die("Database connection failed. Please try again later.");
        }
        
        return $this->conn;
    }
    
    /**
     * Close database connection
     */
    public function closeConnection() {
        if ($this->conn) {
            $this->conn->close();
        }
    }
    
    /**
     * Test database connection
     */
    public function testConnection() {
        try {
            $conn = $this->getConnection();
            if ($conn) {
                $this->closeConnection();
                return true;
            }
        } catch (Exception $e) {
            return false;
        }
        return false;
    }
}
?>

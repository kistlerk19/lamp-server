#!/bin/bash
# Health check script for {{ app_name }}

LOG_FILE="/var/log/{{ app_name }}/health-check.log"
APP_URL="http://localhost/health.php"
TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')

# Function to log messages
log_message() {
    echo "[$TIMESTAMP] $1" >> "$LOG_FILE"
}

# Check if Apache is running
if ! systemctl is-active --quiet apache2; then
    log_message "ERROR: Apache is not running. Attempting to restart..."
    systemctl restart apache2
    if systemctl is-active --quiet apache2; then
        log_message "INFO: Apache restarted successfully"
    else
        log_message "ERROR: Failed to restart Apache"
        exit 1
    fi
fi

# Check application health endpoint
HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$APP_URL" --max-time 10)

if [ "$HTTP_CODE" = "200" ]; then
    log_message "INFO: Application health check passed (HTTP $HTTP_CODE)"
else
    log_message "WARNING: Application health check failed (HTTP $HTTP_CODE)"
    
    # Try to restart Apache if health check fails
    systemctl restart apache2
    log_message "INFO: Apache restarted due to failed health check"
fi

# Check disk space
DISK_USAGE=$(df / | awk 'NR==2 {print $5}' | sed 's/%//')
if [ "$DISK_USAGE" -gt 85 ]; then
    log_message "WARNING: Disk usage is at ${DISK_USAGE}%"
fi

# Rotate log file if it gets too large (>10MB)
if [ -f "$LOG_FILE" ] && [ $(stat -f%z "$LOG_FILE" 2>/dev/null || stat -c%s "$LOG_FILE" 2>/dev/null || echo 0) -gt 10485760 ]; then
    mv "$LOG_FILE" "${LOG_FILE}.old"
    log_message "INFO: Health check log rotated"
fi